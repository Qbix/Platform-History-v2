{
    "errors": {
        "Error": "Error",
        "WalletAbsent": "The wallet is not connected.",
        "Rendering": "There were errors while rendering <span class='url'>{{1}}<\/span>",
        "PriceRequired": "Price required!",
        "NameRequired": "Name required!",
        "PriceInvalid": "Price invalid!",
        "AmountInvalid": "Amount invalid!",
        "TransactionFailed": "The transaction has failed",
        "ChainNotSupported": "The selected chain is not supported. Supported chain: {{supportedChain}}",
        "NeedMetaMaskConnected": "Need MetaMask connected to work with application",
        "UserNotLoggedInMetaMask": "User is not logged in to MetaMask",
        "CurrencyNotFound": "Currency not found",
        "WrongChain": "This NFT created under \"{{chain}}\". Please use this chain.",
        "NoRecipientSelected": "No recipient has been selected",
        "CantManageFrozenSeries": "You can't manage frozen series",
        "SubscriptionStreamNotPaid": "You haven't paid to view this content. Please click {{subscriptionUrl}} and subscribe to the appropriate plan."
    },
    "admin": {
        "Title": "Assets administrative",
        "SubscriptionTitle": "Subscription plans"
    },
    "browsertab": {
        "html": "{{button}}",
        "button": "Tap to pay"
    },
    "notifications": {
        "ChargeProcessedFor": "{{call 'publisher.displayName'}}: the charge has been processed for {{call 'user.displayName'}}",
        "ThankYouForYourPayment": "Thank you for your payment to {{call 'publisher.displayName'}}",
        "SubscribedTo": "{{call 'user.displayName'}} subscribed to {{plan.title}}",
        "YouSubscribedTo": "You have been subscribed to {{plan.title}}",
        "Assets\/credits\/alert": "You have an alert related to your account"
    },
    "charge": {
        "Subject": "You received a payment of {{displayAmount}} from {{call 'publisher.displayName'}} for the \"{{description}}\"",
        "HasBeenCharged": "Hey, this is just to let you know {{1}} has been charged {{2}} for {{3}} by {{4}}"
    },
    "charged": {
        "Subject": "Thank you for your payment for the \"{{description}}\"",
        "HavePaid": "Hey {{1}}, this is just a quick confirmation that you've successfully paid {{2}} to {{3}} for {{4}}"
    },
    "connectedAccount": {
        "Title": "Connect account",
        "Success": "Success",
        "YourAccountCreated": "Your account has been created successfully!",
        "YourAccountAlreadyCreated": "Your account has already been created and is ready to use"
    },
    "payment": {
        "AboutOrder": "Info about order",
        "PaymentMethod": "Payment method",
        "ContactInfo": "Contact info",
        "Pay": "Pay",
        "PaymentSucceeded": "The payment has been successfully processed",
        "PaymentProcessing.": "Your payment is being processed",
        "FailTryAgain": "Your payment was not successful. Please try again.",
        "SomethingWrong": "Something went wrong",
        "PaymentStatus": "Payment status",
        "PayTo": "Pay {{displayName}}",
        "ChooseCurrency": "Choose a currency",
        "YouCanSendUpTo": "You can send up to {{amount}} {{symbol}}",
        "Send": "Send",
        "EnterAmount": "enter amount"
    },
    "credits": {
        "InviteAcceptedBy": "Invite accepted by {{invitedUserName}}",
        "InvitedUserFilledStream": "{{invitedUserName}} filled {{FilledStreamTitle}}",
        "ForFillingStream": "For filling {{FilledStreamTitle}}",
        "YouHaveCreditsToStart": "You have {{amount}} credits to start",
        "PaymentFor": "Payment for \"{{1}}\"",
        "PaymentTo": "Payment to {{1}}",
        "PaymentToUser": "Transfer to {{toUserName}}",
        "CreatePrivateChat": "for private chat with {{toUserName}}",
        "CreatePaidStream": "for creating {{toStreamName}}",
        "JoinedPaidStream": "for reservation in \"<a data-publisherId='{{toPublisherId}}' data-streamName='{{toStreamName}}'>{{toStreamTitle}}<\/a>\"",
        "CreatedCommunity": "for creating community \"{{communityId}}\"",
        "LeftPaidStream": "as a reservation refund in \"<a data-publisherId='{{fromPublisherId}}' data-streamName='{{fromStreamName}}'>{{fromStreamTitle}}<\/a>\"",
        "BoughtCredits": "Bought {{amount}} credits",
        "BonusCredits": "Bonus {{amount}} credits",
        "BuyAmountCredits": "Buy {{amount}} credits",
        "WatchClip": "for watching {{fromStreamTitle}}",
        "MissingCredits": "Missing Credits",
        "YouMissingCredits": "You need an additional {{amount}} credits to proceed.",
        "BuyCredits": "Buy credits",
        "BuyBonus": "Purchasing {{amount}} credits at once will result in a bonus of {{bonus}} credits.",
        "Buy": "Buy",
        "PurchaseCredits": "Purchase Credits",
        "Credits": "Credits",
        "ErrorInvalidAmount": "Amount invalid",
        "ErrorInvalidCurrency": "Unfortunately, we do not yet support the currency {{currency}}",
        "forMessages": {
            "BoughtCredits": "{{amount}} credits",
            "BonusCredits": "{{amount}} credits"
        }
    },
    "history": {
        "Date": "Date",
        "Amount": "Amount",
        "Description": "Description",
        "Client": "Client",
        "User": "User",
        "To": "to",
        "From": "from",
        "SeeHistory": "See payment history for {{1}}",
        "HistoryEmpty": "No transactions yet",
        "PaymentFor": "Sent {{amount}} credits",
        "PaymentTo": "Sent {{amount}} credits",
        "PaymentToUser": "Sent {{amount}} credits",
        "CreatePaidStream": "Spent {{amount}} credits",
        "WatchClip": {
            "+": "Earned {{amount}} credits",
            "-": "Spent {{amount}} credits"
        },
        "JoinedPaidStream": {
            "+": "Earned {{amount}} credits",
            "-": "Spent {{amount}} credits"
        },
        "LeftPaidStream": {
            "+": "Received {{amount}} credits",
            "-": "Sent {{amount}} credits"
        },
        "CreatedCommunity": "Spent {{amount}} credits",
        "BoughtCredits": "Bought {{amount}} credits",
        "BonusCredits": "Got bonus {{amount}} credits",
        "InviteAcceptedBy": "Earned {{amount}} credits",
        "Streams_user_firstname": "Earned {{amount}} credits",
        "Streams_user_lastname": "Earned {{amount}} credits",
        "Streams_user_icon": "Earned {{amount}} credits",
        "Places_user_location": "Earned {{amount}} credits",
        "Streams_greeting": "Earned {{amount}} credits",
        "YouHaveCreditsToStart": "Earned {{amount}} credits",
        "InvitedUserFilledStream": "Earned {{amount}} credits",
        "ForFillingStream": "Earned {{amount}} credits",
        "CreatePrivateChat": "Spent {{amount}} credits"
    },
    "subscriptions": {
        "infoTitle": "Provide the Payment Information",
        "confirm": {
            "title": "Start Subscription",
            "message": "Start a recurring subscription to \"{{title}}\"?",
            "ok": "OK",
            "cancel": "Cancel"
        },
        "CreditOrDebitCard": "Credit or debit card",
        "SubscribePayment": "Subscribe Payment",
        "ImmediatePayment": "Immediate Payment",
        "ProcessingPayment": "Processing Payment",
        "SubscriptionAlreadyPaid": "This subscription already paid",
        "SubscriptionNotActive": "The subscription is currently inactive",
        "Subscribed": "Subscribed",
        "Unsubscribed": "Unsubscribed",
        "Unsubscribe": "Unsubscribe",
        "Subscribe": "Subscribe",
        "Started": "Started",
        "EndsIn": "Ends in",
        "NextPay": "Next payment",
        "Period": "Period",
        "Price": "Price",
        "AreYouSureUnsubscribe": "Are you sure you want to unsubscribe from this plan?",
        "YouUnsubscribedFromPlan": "You have unsubscribed from the plan \"{{planTitle}}\". You will not be charged next time, but your subscription will continue until {{endsIn}}",
        "plan": {
            "TitlePlaceholder": "plan title",
            "PricePlaceholder": "price",
            "SubscriptionTitle": "Subscription plans",
            "DescriptionPlaceholder": "subscription plan description",
            "AreYouSureDeletePlan": "Are you sure you want to delete this plan?",
            "Duration": "Duration",
            "Discount": "Discount",
            "SavePlan": "Save",
            "Interrupt": "Interrupt",
            "Continue": "Continue",
            "NewPlan": "New Plan",
            "SelectDisplayType": "Select {{displayType}}",
            "EndDate": "end date",
            "Available": "Available",
            "Hidden": "Hidden",
            "InviteOnly": "Invite-only",
            "CantSubscribeUnlessInvited": "You can't subscribe to this plan unless you were invited"
        }
    },
    "payments": {
        "infoTitle": "Set Payment Information",
        "BuyAmountCredits": "Buy {{amount}} credits",
        "confirm": {
            "title": "Make a Payment",
            "message": "Do you agree to pay {{symbol}}{{amount}}?",
            "ok": "OK",
            "cancel": "Cancel"
        }
    },
    "types": {
        "Assets\/credits": {
            "displayType": "Credits",
            "description": "keeps track of credits and payments"
        },
        "Assets\/plan": {
            "displayType": "Subsription Plan",
            "description": "subscription plan"
        },
        "Assets\/subscription": {
            "displayType": "Subscription",
            "description": "subscription"
        },
        "Assets\/product": {
            "displayType": "Product",
            "description": "product being sold"
        },
        "Assets\/service": {
            "displayType": "Service",
            "description": "service being offered"
        }
    },
    "messages": {
        "Assets\/credits\/earned": {
            "content": "Earned {{amount}} credits"
        },
        "Assets\/credits\/bought": {
            "content": "Bought {{amount}} credits"
        },
        "Assets\/credits\/bonus": {
            "content": "Bonus {{amount}} credits"
        },
        "Assets\/credits\/spent": {
            "content": "Spent {{amount}} credits"
        },
        "Assets\/credits\/sent": {
            "content": "Sent {{amount}} credits to {{toUserName}}"
        },
        "Assets\/credits\/received": {
            "content": "Received {{amount}} credits from {{fromUserName}}"
        },
        "Assets\/credits\/alert": {
            "content": "You have insufficient credits in your account. Please visit the following <a href='{{link}}'>link<\/a> to purchase more credits."
        }
    },
    "billing": {
        "Title": "Assets billing",
        "CreditsMinimum": "Minimum credits",
        "CreditsToAdd": "Credits to add",
        "Save": "Save",
        "ThisLink": "this link",
        "errors": {
            "CreditsMinimumNegative": "The minimum credits cannot be negative",
            "CreditsToAddNegative": "The credits to add cannot be negative"
        }
    },
    "services": {
        "NewServiceTemplate": {
            "Title": "New Service",
            "TitlePlaceholder": "Service title",
            "PricePlaceholder": "Set price",
            "LinkPlaceholder": "set additional info link",
            "DescriptionPlaceholder": "Service description",
            "SaveService": "Save Service",
            "SelectRequiredParticipants": "Required related participants",
            "RequiredParticipantsDesc": "Please select related participants which is required to use this service (for example pets for \"Dogs show\", or children for \"Children's holiday\" etc). If service is paid, user will need to pay also for each related participants."
        },
        "EditServiceTemplate": {
            "Title": "Edit Service"
        },
        "ManageServiceTemplates": "Manage Service Templates",
        "ManageServices": "Manage Services",
        "Free": "Free",
        "OptionalContribution": "Optional contribution",
        "RequiredPayment": "Required payment",
        "AreYouSureDelete": "Are you sure you want to delete this service?",
        "AmountServicesRelated": "There are {{amount}} availabilities related to this service. They will also be removed."
    },
    "transfer": {
        "SelectRecipient": "Select recipient",
        "TransactionSuccess": "Transaction Success",
        "OrTypeWalletAddress": "OR type recipient wallet address",
        "AppCredits": "App Credits"
    },
    "NFT": {
        "Title": "Title",
        "Name": "Name",
        "EnterName": "Enter name",
        "EnterAuthorWallet": "Enter author wallet",
        "InformationAboutTitle": "Information about {{title}} NFT",
        "Description": "Description",
        "DetailedInformationAboutNFT": "Detailed information about NFT",
        "PresaleStarts": "Presale Starts Dec 23",
        "OwnerUserNotFound": "Owner of this NFT is not registered in our application.",
        "BuyNow": "Buy now",
        "Buy": "Buy",
        "Add": "Add",
        "Remove": "Remove",
        "NoNFTyet": "No NFTs yet",
        "Conversation": "Conversation",
        "Create": "Create",
        "CurrentBid": "Current bid",
        "StartingIn": "Starting in",
        "EndingIn": "Ending in",
        "CreateNFT": "Create an NFT",
        "TitlePlaceholder": "Give your NFT a title",
        "DescriptionPlaceholder": "Give your NFT a description",
        "CreateYourNFT": "Create your NFT",
        "Royalties": "Royalties",
        "RoyaltyPlaceholder": "Optional. Amount paid to creator before transfer.",
        "ExpirationDate": "Expiration Date",
        "StartingDate": "Start Date",
        "BidsBelowThisAmount": "Bids below this amount won't be allowed",
        "MinimumBid": "Minimum bid",
        "Author": "Author",
        "Price": "Price",
        "Commission": "Commission",
        "EnterCommission": "Enter commission",
        "Owner": "Owner",
        "SelectCategory": "Select category",
        "Day": "Day",
        "Days": "Days",
        "Hour": "Hour",
        "Hours": "Hours",
        "Minute": "Minute",
        "Minutes": "Minutes",
        "Second": "Second",
        "Seconds": "Seconds",
        "SalesCreator": "of sales will go to creator",
        "Details": "Details",
        "Bids": "Bids",
        "History": "History",
        "LoremIpsum": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
        "PutOnSale": "Put on sale",
        "PutOffSale": "Withdraw from sale",
        "Transfer": "Transfer",
        "Actions": "Actions",
        "Claim": "Claim",
        "ClaimNFT": "Claim NFT",
        "Unlocking": "Unlocking",
        "Unlock": "Unlock",
        "Update": "Update",
        "UpdateToken": "Update Token",
        "UpdateNFT": "Update NFT",
        "CreateToken": "Create Token",
        "PlaceBid": "Place Bid",
        "SoldOut": "Sold",
        "NotOnSale": "Not On Sale",
        "NftName": "NFT name",
        "DescribeYourNFT": "Please describe your NFT",
        "NFTImage": "Image for NFT",
        "NFTVideo": "Video for NFT, if any",
        "GenerateDescription": "or auto-generate",
        "UploadMovie": "Upload movie",
        "MovieSource": "Movie Source",
        "MovieURL": "Movie URL",
        "UploadFile": "Upload a file",
        "PutOnMarketplace": "Put on marketplace",
        "InstantPurchase": "Enter price to allow users instantly purchase your NFT",
        "FixedPrice": "Fixed price",
        "TimedAuction": "Timed auction",
        "OpenForBids": "Open for bids",
        "PriceOnePiece": "Enter price for one piece",
        "EnterPrice": "Enter price",
        "EnterMinimumBid": "Enter Minimum bid",
        "SelectChain": "Select chain",
        "Currency": "Currency",
        "AreYouSureDeleteImage": "Are you sure you want to remove image?",
        "AreYouSureDeleteVideo": "Are you sure you want to remove video?",
        "series": {
            "Name": "Name",
            "Icon": "Icon",
            "Description": "Description",
            "Author": "Author",
            "SelectSeries": "Select series",
            "Value": "Value",
            "AreYouSure": "Are you sure?",
            "AuthorInvalid": "Author address invalid!",
            "Address": "Address",
            "CoverImage": "Cover image",
            "UploadCoverImage": "Upload cover image",
            "CommissionAddressInvalid": "Commission address invalid",
            "OnSale": "on sale",
            "OffSale": "off sale",
            "CreateSeries": "Create Series",
            "UpdateSeries": "Update Series",
            "SeriesInfo": "Series Info",
            "SelectAuthor": "Select author",
            "NewItem": "New NFT series",
            "NamePlaceholder": "Enter series name",
            "DescPlaceholder": "Enter series description",
            "EndingIn": "Ending In"
        },
        "contract": {
            "CreateContract": "Create contract",
            "SelectContract": "Select contract",
            "CreateContractFor": "Create contract for {{userName}}",
            "ContractFor": "Contract for {{userName}}",
            "UpdateContract": "Update Contract",
            "TransferOwnership": "Transfer Ownership",
            "SetBaseURI": "Set Base URI",
            "SetSuffix": "Set Suffix",
            "CurrentOwner": "Current Owner",
            "CurrentBaseURL": "Current BaseURL",
            "ContractAddressAbsent": "Contract address absent",
            "FactoryAddressAbsent": "Factory address absent",
            "ContractName": "{{contractName}} - {{contractSymbol}} ({{chainNetwork}})",
            "TitleRequired": "Title required",
            "SymbolRequired": "Symbol required",
            "TypeContractName": "contract name",
            "TypeContractSymbol": "contract symbol (max 10 chars)"
        },
        "contests": {
            "Title": "Contests",
            "NewContest": "New Contest"
        },
        "collections": {
            "Title": "Collections",
            "EnterTitle": "enter title",
            "EnterDescription": "enter description",
            "NewCollection": "New Collection",
            "Name": "Name",
            "Icon": "Icon",
            "Description": "Description",
            "Author": "Author",
            "SelectCollection": "Select collection",
            "Value": "Value",
            "AreYouSure": "Are you sure?",
            "AuthorInvalid": "Author address invalid!",
            "Address": "Address",
            "CoverImage": "Cover image",
            "UploadIcon": "Upload icon",
            "CommissionAddressInvalid": "Commission address invalid",
            "OnSale": "on sale",
            "OffSale": "off sale",
            "CreateCollection": "Create Collection",
            "UpdateCollection": "Update Collection",
            "CollectionInfo": "Collection Info",
            "SelectAuthor": "Select author",
            "NewItem": "New NFT Collection",
            "NamePlaceholder": "Enter collection name",
            "DescPlaceholder": "Enter collection description",
            "EndingIn": "Ending In",
            "SubmitSeries": "Submit a Series"
        },
        "import": {
            "importNFT": "Importing NFT's",
            "importAttributes": "Import NFT attributes",
            "fileNotFound": "Sorry, CSV file not found.",
            "fileEmpty": "Sorry, CSV file is empty.",
            "userIdNotFound": "user exist but id empty",
            "errorLine": "line {{1}}",
            "fieldNotFound": "Required field \"{{1}}\" not found",
            "displayTypeEmpty": "Display type for \"{{1}}\" not found",
            "taskStreamInvalid": "task stream invalid",
            "instructionsEmpty": "task stream instructions empty",
            "complete": "Complete",
            "activateUsers": "send activation message to users?",
            "importProgress": "Progress",
            "importOptions": "Options",
            "sampleCSV": "Download Sample CSV",
            "fileLabel": "Upload Spreadsheet:",
            "errorsTitle": "Errors occurred"
        },
        "filter": {
            "ByCategory": {
                "FilterByNFTCollections": "Filter by NFT Collections",
                "ShowNFTCollection": "Show NFT collection in ...",
                "AllCollections": "All Collections"
            },
            "ByUser": {
                "AllAuthors": "All Authors",
                "AllUsers": "Everyone",
                "FilterByAuthors": "Filter by Authors"
            }
        },
        "Back": "Back to Collection",
        "attributes": {
            "Title": "Manage Attributes",
            "Attributes": "Attributes",
            "DisplayTitle": "Display Type",
            "AddDisplayType": "Add new display type",
            "NewDisplay": "New Display",
            "TraitTitle": "Trait Type",
            "AddTraitTitle": "Add new trait type",
            "NewTrait": "New Trait Type",
            "ValueTitle": "Value",
            "AddValueTitle": "Add new value",
            "NewValue": "New Value",
            "NewAttribute": "New Attribute",
            "UpdateAttributes": "Update Attributes",
            "SaveAttributes": "Save Attributes"
        },
        "profile": {
            "LogOut": "Log out",
            "Title": "Profile for {{userName}}",
            "Description": "User details",
            "aboutPlaceholder": "Edit Bio",
            "UploadCoverPhoto": "Upload Cover Photo",
            "SureLogOut": "Are you sure you want to log out?"
        },
        "sales": {
            "factory": {
                "form": {
                    "labels": {
                        "NFTContract": "NFTContract",
                        "seriesId": "series Id",
                        "owner": "Owner",
                        "currency": "Сurrency",
                        "price": "Price",
                        "beneficiary": "Beneficiary",
                        "autoindex": "Autoindex",
                        "duration": "Duration",
                        "rateInterval": "Rate interval",
                        "rateAmount": "Rate amount"
                    },
                    "small": {
                        "NFTContract": "NFTContract",
                        "seriesId": "tokens will be minted in this series",
                        "owner": "owner of instance, otherwise will be sender",
                        "currency": "Currency for purchased tokens, if zero - for native coins",
                        "price": "Price",
                        "beneficiary": "Beneficiary of selling tokens, otherwise will be sender",
                        "autoindex": "Autoindex",
                        "duration": "Lock after minting. Zero means get it immediately.",
                        "rateInterval": "bucket interval for special purchase",
                        "rateAmount": "bucket amount for special purchase"
                    }
                },
                "placeholders": {
                    "optional": "(optional)",
                    "number": "number",
                    "address": "address",
                    "fraction": "fraction",
                    "integer": "integer",
                    "seconds": "seconds",
                    "uint256": "uint256",
                    "uint192": "uint192",
                    "uint64": "uint64",
                    "uint32": "uint32",
                    "uint16": "uint16"
                },
                "produce": "Produce",
                "viewInstancesList": "Refresh List"
            },
            "instance": {
                "form": {
                    "labels": {
                        "seriesId": "Series ID",
                        "account": "Account",
                        "amount": "Amount"
                    },
                    "small": {
                        "seriesId": "new token will belong in series with such ID",
                        "account": "owner of newly created NFT. if not set - will use current wallet",
                        "amount": "amount NFT to mint"
                    }
                },
                "placeholders": {
                    "optional": "(optional)",
                    "seriesId": "id",
                    "account": "account",
                    "amount": "amount",
                    "integer": "integer"
                },
                "btn": {
                    "Purchase": "Purchase",
                    "SpecialPurchase": "Special purchase"
                }
            },
            "whitelist": {
                "form": {
                    "labels": {
                        "account": "Address"
                    },
                    "small": {
                        "account": "Address"
                    }
                },
                "errors": {
                    "invalidAddress": "Invalid Address"
                },
                "placeholders": {
                    "account": "Address"
                },
                "addToWhitelist": "Add To Whitelist",
                "removeFromWhitelist": "Remove From Whitelist"
            }
        },
        "locked": {
            "form": {
                "labels": {
                    "tokenId": "Token ID",
                    "custodian": "Custodian",
                    "recipient": "Recipient"
                },
                "small": {
                    "tokenId": "token id what need to lock or unlock",
                    "custodian": "address that can be able to unlock",
                    "recipient": "address that will receive the tokens"
                }
            },
            "errors": {
                "invalidTokenId": "Invalid tokenId",
                "invalidCustodian": "Invalid Custodian",
                "invalidRecipient": "Invalid Recipient"
            },
            "placeholders": {
                "optional": "(optional)",
                "tokenId": "id",
                "custodian": "address"
            },
            "Lock": "Lock",
            "Unlock": "Unlock",
            "Locked": "Locked",
            "CustodianAddress": "Custodian address",
            "TokenWasClaimed": "Token \"{{title}}\" was claimed",
            "TokenWasLocked": "Token \"{{title}}\" was locked",
            "TokenWasUnlocked": "Token \"{{title}}\" was unlocked"
        }
    },
    "fundrise": {
        "placeholder": "type something about this contribution..."
    },
    "currencies": {
        "choose": "Choose a currency"
    }
}